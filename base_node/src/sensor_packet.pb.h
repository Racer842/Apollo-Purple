/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_SENSOR_PACKET_PB_H_INCLUDED
#define PB_SENSOR_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorData {
    uint32_t sensor_id; /* 1â€“4 */
    float temperature;
    float humidity_pct;
    float pressure_hpa;
    uint32_t co2_ppm;
} SensorData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorData_init_default                  {0, 0, 0, 0, 0}
#define SensorData_init_zero                     {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_sensor_id_tag                 1
#define SensorData_temperature_tag               3
#define SensorData_humidity_pct_tag              4
#define SensorData_pressure_hpa_tag              5
#define SensorData_co2_ppm_tag                   6

/* Struct field encoding specification for nanopb */
#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sensor_id,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity_pct,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure_hpa,      5) \
X(a, STATIC,   SINGULAR, UINT32,   co2_ppm,           6)
#define SensorData_CALLBACK NULL
#define SensorData_DEFAULT NULL

extern const pb_msgdesc_t SensorData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorData_fields &SensorData_msg

/* Maximum encoded size of messages (where known) */
#define SENSOR_PACKET_PB_H_MAX_SIZE              SensorData_size
#define SensorData_size                          27

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
